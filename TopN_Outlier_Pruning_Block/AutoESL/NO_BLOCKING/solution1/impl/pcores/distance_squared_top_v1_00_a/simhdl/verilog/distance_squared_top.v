// ==============================================================
// File generated by AutoESL - High-Level Synthesis System (C, C++, SystemC)
// Version: 2012.1
// Copyright (C) 2012 Xilinx Inc. All rights reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module distance_squared_top (
s_axi_CONTROL_BUS_ACLK,
s_axi_CONTROL_BUS_ARESETN,
s_axi_CONTROL_BUS_AWADDR,
s_axi_CONTROL_BUS_AWVALID,
s_axi_CONTROL_BUS_AWREADY,
s_axi_CONTROL_BUS_WDATA,
s_axi_CONTROL_BUS_WSTRB,
s_axi_CONTROL_BUS_WVALID,
s_axi_CONTROL_BUS_WREADY,
s_axi_CONTROL_BUS_BRESP,
s_axi_CONTROL_BUS_BVALID,
s_axi_CONTROL_BUS_BREADY,
s_axi_CONTROL_BUS_ARADDR,
s_axi_CONTROL_BUS_ARVALID,
s_axi_CONTROL_BUS_ARREADY,
s_axi_CONTROL_BUS_RDATA,
s_axi_CONTROL_BUS_RRESP,
s_axi_CONTROL_BUS_RVALID,
s_axi_CONTROL_BUS_RREADY,
interrupt,
INPUT_STREAM_A_TVALID,
INPUT_STREAM_A_TREADY,
INPUT_STREAM_A_TDATA,
INPUT_STREAM_A_TKEEP,
INPUT_STREAM_A_TLAST,
INPUT_STREAM_B_TVALID,
INPUT_STREAM_B_TREADY,
INPUT_STREAM_B_TDATA,
INPUT_STREAM_B_TKEEP,
INPUT_STREAM_B_TLAST,
SYS_RESET,
SYS_CLK
);

parameter C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 32;
parameter C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter RESET_ACTIVE_LOW = 1;
input s_axi_CONTROL_BUS_ACLK ;
input s_axi_CONTROL_BUS_ARESETN ;
input [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR ;
input s_axi_CONTROL_BUS_AWVALID ;
output s_axi_CONTROL_BUS_AWREADY ;
input [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA ;
input [C_S_AXI_CONTROL_BUS_DATA_WIDTH/8 - 1:0] s_axi_CONTROL_BUS_WSTRB ;
input s_axi_CONTROL_BUS_WVALID ;
output s_axi_CONTROL_BUS_WREADY ;
output [2 - 1:0] s_axi_CONTROL_BUS_BRESP ;
output s_axi_CONTROL_BUS_BVALID ;
input s_axi_CONTROL_BUS_BREADY ;
input [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR ;
input s_axi_CONTROL_BUS_ARVALID ;
output s_axi_CONTROL_BUS_ARREADY ;
output [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA ;
output [2 - 1:0] s_axi_CONTROL_BUS_RRESP ;
output s_axi_CONTROL_BUS_RVALID ;
input s_axi_CONTROL_BUS_RREADY ;
output interrupt ;


input INPUT_STREAM_A_TVALID ;
output INPUT_STREAM_A_TREADY ;
input [64 - 1:0] INPUT_STREAM_A_TDATA ;
input [8 - 1:0] INPUT_STREAM_A_TKEEP ;
input [1 - 1:0] INPUT_STREAM_A_TLAST ;


input INPUT_STREAM_B_TVALID ;
output INPUT_STREAM_B_TREADY ;
input [64 - 1:0] INPUT_STREAM_B_TDATA ;
input [8 - 1:0] INPUT_STREAM_B_TKEEP ;
input [1 - 1:0] INPUT_STREAM_B_TLAST ;

input SYS_RESET ;

input SYS_CLK ;

wire s_axi_CONTROL_BUS_ACLK;
wire s_axi_CONTROL_BUS_ARESETN;
wire [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
wire s_axi_CONTROL_BUS_AWVALID;
wire s_axi_CONTROL_BUS_AWREADY;
wire [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
wire [C_S_AXI_CONTROL_BUS_DATA_WIDTH/8 - 1:0] s_axi_CONTROL_BUS_WSTRB;
wire s_axi_CONTROL_BUS_WVALID;
wire s_axi_CONTROL_BUS_WREADY;
wire [2 - 1:0] s_axi_CONTROL_BUS_BRESP;
wire s_axi_CONTROL_BUS_BVALID;
wire s_axi_CONTROL_BUS_BREADY;
wire [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
wire s_axi_CONTROL_BUS_ARVALID;
wire s_axi_CONTROL_BUS_ARREADY;
wire [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
wire [2 - 1:0] s_axi_CONTROL_BUS_RRESP;
wire s_axi_CONTROL_BUS_RVALID;
wire s_axi_CONTROL_BUS_RREADY;
wire interrupt;


wire INPUT_STREAM_A_TVALID;
wire INPUT_STREAM_A_TREADY;
wire [64 - 1:0] INPUT_STREAM_A_TDATA;
wire [8 - 1:0] INPUT_STREAM_A_TKEEP;
wire [1 - 1:0] INPUT_STREAM_A_TLAST;


wire INPUT_STREAM_B_TVALID;
wire INPUT_STREAM_B_TREADY;
wire [64 - 1:0] INPUT_STREAM_B_TDATA;
wire [8 - 1:0] INPUT_STREAM_B_TKEEP;
wire [1 - 1:0] INPUT_STREAM_B_TLAST;

wire SYS_RESET;


wire [64 - 1:0] sig_distance_squared_sum;
wire sig_distance_squared_ap_start;
wire sig_distance_squared_ap_done;
wire sig_distance_squared_ap_idle;


wire [64 - 1:0] sig_distance_squared_vector1_data_V_dout;
wire sig_distance_squared_vector1_data_V_empty_n;
wire sig_distance_squared_vector1_data_V_read;
wire [8 - 1:0] sig_distance_squared_vector1_keep_V_dout;
wire sig_distance_squared_vector1_keep_V_empty_n;
wire sig_distance_squared_vector1_keep_V_read;
wire [1 - 1:0] sig_distance_squared_vector1_last_V_dout;
wire sig_distance_squared_vector1_last_V_empty_n;
wire sig_distance_squared_vector1_last_V_read;


wire [64 - 1:0] sig_distance_squared_vector2_data_V_dout;
wire sig_distance_squared_vector2_data_V_empty_n;
wire sig_distance_squared_vector2_data_V_read;
wire [8 - 1:0] sig_distance_squared_vector2_keep_V_dout;
wire sig_distance_squared_vector2_keep_V_empty_n;
wire sig_distance_squared_vector2_keep_V_read;
wire [1 - 1:0] sig_distance_squared_vector2_last_V_dout;
wire sig_distance_squared_vector2_last_V_empty_n;
wire sig_distance_squared_vector2_last_V_read;

wire sig_distance_squared_ap_rst;




distance_squared distance_squared_U(
    .sum(sig_distance_squared_sum),
    .ap_start(sig_distance_squared_ap_start),
    .ap_done(sig_distance_squared_ap_done),
    .ap_idle(sig_distance_squared_ap_idle),
    .vector1_data_V_dout(sig_distance_squared_vector1_data_V_dout),
    .vector1_data_V_empty_n(sig_distance_squared_vector1_data_V_empty_n),
    .vector1_data_V_read(sig_distance_squared_vector1_data_V_read),
    .vector1_keep_V_dout(sig_distance_squared_vector1_keep_V_dout),
    .vector1_keep_V_empty_n(sig_distance_squared_vector1_keep_V_empty_n),
    .vector1_keep_V_read(sig_distance_squared_vector1_keep_V_read),
    .vector1_last_V_dout(sig_distance_squared_vector1_last_V_dout),
    .vector1_last_V_empty_n(sig_distance_squared_vector1_last_V_empty_n),
    .vector1_last_V_read(sig_distance_squared_vector1_last_V_read),
    .vector2_data_V_dout(sig_distance_squared_vector2_data_V_dout),
    .vector2_data_V_empty_n(sig_distance_squared_vector2_data_V_empty_n),
    .vector2_data_V_read(sig_distance_squared_vector2_data_V_read),
    .vector2_keep_V_dout(sig_distance_squared_vector2_keep_V_dout),
    .vector2_keep_V_empty_n(sig_distance_squared_vector2_keep_V_empty_n),
    .vector2_keep_V_read(sig_distance_squared_vector2_keep_V_read),
    .vector2_last_V_dout(sig_distance_squared_vector2_last_V_dout),
    .vector2_last_V_empty_n(sig_distance_squared_vector2_last_V_empty_n),
    .vector2_last_V_read(sig_distance_squared_vector2_last_V_read),
    .ap_rst(sig_distance_squared_ap_rst),
    .ap_clk(SYS_CLK)
);

CONTROL_BUS_if #(
    .C_ADDR_WIDTH(C_S_AXI_CONTROL_BUS_ADDR_WIDTH),
    .C_DATA_WIDTH(C_S_AXI_CONTROL_BUS_DATA_WIDTH))
CONTROL_BUS_if_U(
    .O_sum(sig_distance_squared_sum),
    .I_ap_start(sig_distance_squared_ap_start),
    .O_ap_done(sig_distance_squared_ap_done),
    .O_ap_idle(sig_distance_squared_ap_idle),
    .ACLK(s_axi_CONTROL_BUS_ACLK),
    .ARESETN(s_axi_CONTROL_BUS_ARESETN),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .interrupt(interrupt));

INPUT_STREAM_A_if INPUT_STREAM_A_if_U(
    .clk(SYS_CLK),
    .reset(sig_distance_squared_ap_rst),
    .vector1_data_V_dout(sig_distance_squared_vector1_data_V_dout),
    .vector1_data_V_empty_n(sig_distance_squared_vector1_data_V_empty_n),
    .vector1_data_V_read(sig_distance_squared_vector1_data_V_read),
    .vector1_keep_V_dout(sig_distance_squared_vector1_keep_V_dout),
    .vector1_keep_V_empty_n(sig_distance_squared_vector1_keep_V_empty_n),
    .vector1_keep_V_read(sig_distance_squared_vector1_keep_V_read),
    .vector1_last_V_dout(sig_distance_squared_vector1_last_V_dout),
    .vector1_last_V_empty_n(sig_distance_squared_vector1_last_V_empty_n),
    .vector1_last_V_read(sig_distance_squared_vector1_last_V_read),
    .TVALID(INPUT_STREAM_A_TVALID),
    .TREADY(INPUT_STREAM_A_TREADY),
    .TDATA(INPUT_STREAM_A_TDATA),
    .TKEEP(INPUT_STREAM_A_TKEEP),
    .TLAST(INPUT_STREAM_A_TLAST));

INPUT_STREAM_B_if INPUT_STREAM_B_if_U(
    .clk(SYS_CLK),
    .reset(sig_distance_squared_ap_rst),
    .vector2_data_V_dout(sig_distance_squared_vector2_data_V_dout),
    .vector2_data_V_empty_n(sig_distance_squared_vector2_data_V_empty_n),
    .vector2_data_V_read(sig_distance_squared_vector2_data_V_read),
    .vector2_keep_V_dout(sig_distance_squared_vector2_keep_V_dout),
    .vector2_keep_V_empty_n(sig_distance_squared_vector2_keep_V_empty_n),
    .vector2_keep_V_read(sig_distance_squared_vector2_keep_V_read),
    .vector2_last_V_dout(sig_distance_squared_vector2_last_V_dout),
    .vector2_last_V_empty_n(sig_distance_squared_vector2_last_V_empty_n),
    .vector2_last_V_read(sig_distance_squared_vector2_last_V_read),
    .TVALID(INPUT_STREAM_B_TVALID),
    .TREADY(INPUT_STREAM_B_TREADY),
    .TDATA(INPUT_STREAM_B_TDATA),
    .TKEEP(INPUT_STREAM_B_TKEEP),
    .TLAST(INPUT_STREAM_B_TLAST));

distance_squared_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_distance_squared_ap_rst),
    .din(SYS_RESET));

endmodule
