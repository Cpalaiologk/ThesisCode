// ==============================================================
// File generated by AutoESL - High-Level Synthesis System (C, C++, SystemC)
// Version: 2012.1
// Copyright (C) 2012 Xilinx Inc. All rights reserved.
// 
// ==============================================================

#ifndef XBASIC_H
#define XBASIC_H

#ifdef __cplusplus
extern "C" {
#endif

/***************************** Include Files *********************************/
#include "xil_types.h"
#include "xil_assert.h"
#include "xstatus.h"
#include "xil_io.h"
#include "xbasic_BUS_A.h"

/**************************** Type Definitions ******************************/
typedef struct {
    u16 DeviceId; // currently not used
    u32 Bus_a_BaseAddress;
} XBasic_Config;

typedef struct {
    u32 Bus_a_BaseAddress;
    u32 IsReady;
} XBasic;

/***************** Macros (Inline Functions) Definitions *********************/
#define XBasic_WriteReg(BaseAddress, RegOffset, Data) \
    Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))

#define XBasic_ReadReg(BaseAddress, RegOffset) \
    Xil_In32((BaseAddress) + (RegOffset))

/************************** Function Prototypes *****************************/
int XBasic_Initialize(XBasic *InstancePtr, XBasic_Config *ConfigPtr);

void XBasic_Start(XBasic *InstancePtr);
u32 XBasic_IsDone(XBasic *InstancePtr);
u32 XBasic_IsIdle(XBasic *InstancePtr);

void XBasic_SetA(XBasic *InstancePtr, u32 Data);
u32 XBasic_GetA(XBasic *InstancePtr);
void XBasic_SetB(XBasic *InstancePtr, u32 Data);
u32 XBasic_GetB(XBasic *InstancePtr);
u32 XBasic_GetC(XBasic *InstancePtr);

void XBasic_InterruptGlobalEnable(XBasic *InstancePtr);
void XBasic_InterruptGlobalDisable(XBasic *InstancePtr);
void XBasic_InterruptEnable(XBasic *InstancePtr, u32 Mask);
void XBasic_InterruptDisable(XBasic *InstancePtr, u32 Mask);
void XBasic_InterruptClear(XBasic *InstancePtr, u32 Mask);
u32 XBasic_InterruptGetEnabled(XBasic *InstancePtr);
u32 XBasic_InterruptGetStatus(XBasic *InstancePtr);

#ifdef __cplusplus
}
#endif

#endif
