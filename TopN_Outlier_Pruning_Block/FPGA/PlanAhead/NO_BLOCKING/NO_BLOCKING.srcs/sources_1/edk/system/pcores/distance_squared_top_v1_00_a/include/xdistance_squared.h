// ==============================================================
// File generated by AutoESL - High-Level Synthesis System (C, C++, SystemC)
// Version: 2012.1
// Copyright (C) 2012 Xilinx Inc. All rights reserved.
// 
// ==============================================================

#ifndef XDISTANCE_SQUARED_H
#define XDISTANCE_SQUARED_H

#ifdef __cplusplus
extern "C" {
#endif

/***************************** Include Files *********************************/
#include "xil_types.h"
#include "xil_assert.h"
#include "xstatus.h"
#include "xil_io.h"
#include "xdistance_squared_CONTROL_BUS.h"

/**************************** Type Definitions ******************************/
typedef struct {
    u16 DeviceId; // currently not used
    u32 Control_bus_BaseAddress;
} XDistance_squared_Config;

typedef struct {
    u32 Control_bus_BaseAddress;
    u32 IsReady;
} XDistance_squared;

/***************** Macros (Inline Functions) Definitions *********************/
#define XDistance_squared_WriteReg(BaseAddress, RegOffset, Data) \
    Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))

#define XDistance_squared_ReadReg(BaseAddress, RegOffset) \
    Xil_In32((BaseAddress) + (RegOffset))

/************************** Function Prototypes *****************************/
int XDistance_squared_Initialize(XDistance_squared *InstancePtr, XDistance_squared_Config *ConfigPtr);

void XDistance_squared_Start(XDistance_squared *InstancePtr);
u32 XDistance_squared_IsDone(XDistance_squared *InstancePtr);
u32 XDistance_squared_IsIdle(XDistance_squared *InstancePtr);

u64 XDistance_squared_GetSum(XDistance_squared *InstancePtr);

void XDistance_squared_InterruptGlobalEnable(XDistance_squared *InstancePtr);
void XDistance_squared_InterruptGlobalDisable(XDistance_squared *InstancePtr);
void XDistance_squared_InterruptEnable(XDistance_squared *InstancePtr, u32 Mask);
void XDistance_squared_InterruptDisable(XDistance_squared *InstancePtr, u32 Mask);
void XDistance_squared_InterruptClear(XDistance_squared *InstancePtr, u32 Mask);
u32 XDistance_squared_InterruptGetEnabled(XDistance_squared *InstancePtr);
u32 XDistance_squared_InterruptGetStatus(XDistance_squared *InstancePtr);

#ifdef __cplusplus
}
#endif

#endif
