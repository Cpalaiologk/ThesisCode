// ==============================================================
// RTL generated by AutoESL - High-Level Synthesis System (C, C++, SystemC)
// Version: 2012.1
// Copyright (C) 2012 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module distance_squared (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        vector1_data_V_dout,
        vector1_data_V_empty_n,
        vector1_data_V_read,
        vector1_keep_V_dout,
        vector1_keep_V_empty_n,
        vector1_keep_V_read,
        vector1_last_V_dout,
        vector1_last_V_empty_n,
        vector1_last_V_read,
        vector2_data_V_dout,
        vector2_data_V_empty_n,
        vector2_data_V_read,
        vector2_keep_V_dout,
        vector2_keep_V_empty_n,
        vector2_keep_V_read,
        vector2_last_V_dout,
        vector2_last_V_empty_n,
        vector2_last_V_read,
        sum
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
input  [63:0] vector1_data_V_dout;
input   vector1_data_V_empty_n;
output   vector1_data_V_read;
input  [7:0] vector1_keep_V_dout;
input   vector1_keep_V_empty_n;
output   vector1_keep_V_read;
input  [0:0] vector1_last_V_dout;
input   vector1_last_V_empty_n;
output   vector1_last_V_read;
input  [63:0] vector2_data_V_dout;
input   vector2_data_V_empty_n;
output   vector2_data_V_read;
input  [7:0] vector2_keep_V_dout;
input   vector2_keep_V_empty_n;
output   vector2_keep_V_read;
input  [0:0] vector2_last_V_dout;
input   vector2_last_V_empty_n;
output   vector2_last_V_read;
output  [63:0] sum;

reg ap_done;
reg ap_idle;
reg vector1_data_V_read;
reg vector2_data_V_read;
reg   [5:0] ap_CS_fsm = 6'b000000;
reg   [7:0] dim_reg_203;
wire   [63:0] grp_fu_215_p2;
reg   [63:0] reg_240;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond1_reg_322;
reg    ap_sig_bdd_100;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it10;
wire   [63:0] sum_of_squares_split_q0;
reg   [63:0] reg_247;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it15;
wire   [2:0] sum_of_squares_split_addr_gep_fu_121_p3;
reg   [2:0] sum_of_squares_split_addr_reg_282;
wire   [2:0] sum_of_squares_split_addr_1_gep_fu_135_p3;
reg   [2:0] sum_of_squares_split_addr_1_reg_287;
wire   [2:0] sum_of_squares_split_addr_2_gep_fu_148_p3;
reg   [2:0] sum_of_squares_split_addr_2_reg_292;
wire   [2:0] sum_of_squares_split_addr_3_gep_fu_156_p3;
reg   [2:0] sum_of_squares_split_addr_3_reg_297;
wire   [2:0] sum_of_squares_split_addr_4_gep_fu_164_p3;
reg   [2:0] sum_of_squares_split_addr_4_reg_302;
wire   [2:0] sum_of_squares_split_addr_5_gep_fu_172_p3;
reg   [2:0] sum_of_squares_split_addr_5_reg_307;
wire   [2:0] sum_of_squares_split_addr_6_gep_fu_180_p3;
reg   [2:0] sum_of_squares_split_addr_6_reg_312;
wire   [2:0] sum_of_squares_split_addr_7_gep_fu_188_p3;
reg   [2:0] sum_of_squares_split_addr_7_reg_317;
wire   [0:0] exitcond1_fu_254_p2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it11;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it12;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it13;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it14;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it16;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it17;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it18;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it19;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it20;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_322_pp0_it21;
reg   [2:0] dim_cast3_reg_331;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it1;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it2;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it3;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it4;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it5;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it6;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it7;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it8;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it9;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it10;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it11;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it12;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it13;
reg   [2:0] ap_reg_ppstg_dim_cast3_reg_331_pp0_it14;
reg   [63:0] vector1_data_V_read_reg_336;
reg   [63:0] vector2_data_V_read_reg_341;
wire   [63:0] grp_fu_234_p1;
reg   [63:0] vector1_data_reg_346;
wire   [63:0] grp_fu_237_p1;
reg   [63:0] vector2_data_reg_351;
reg   [2:0] sum_of_squares_split_addr_8_reg_356;
reg   [2:0] ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it16;
reg   [2:0] ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it17;
reg   [2:0] ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it18;
reg   [2:0] ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it19;
reg   [2:0] ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it20;
reg   [2:0] ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it21;
wire   [63:0] grp_fu_224_p2;
reg   [63:0] diff_squared_reg_362;
wire   [63:0] grp_fu_219_p2;
reg   [63:0] tmp_1_reg_367;
reg   [63:0] tmp_s_reg_372;
reg   [2:0] sum_of_squares_split_address0;
reg    sum_of_squares_split_ce0;
reg    sum_of_squares_split_we0;
wire   [63:0] sum_of_squares_split_d0;
reg   [2:0] sum_of_squares_split_address1;
reg    sum_of_squares_split_ce1;
reg    sum_of_squares_split_we1;
reg   [63:0] sum_of_squares_split_d1;
wire   [31:0] tmp_cast_fu_270_p1;
reg   [63:0] grp_fu_215_p0;
reg   [63:0] grp_fu_215_p1;
wire   [63:0] grp_fu_219_p0;
wire   [63:0] grp_fu_219_p1;
wire   [63:0] grp_fu_224_p0;
wire   [63:0] grp_fu_224_p1;
wire   [63:0] grp_fu_228_p0;
wire   [63:0] grp_fu_228_p1;
wire   [63:0] grp_fu_234_p0;
wire   [63:0] grp_fu_237_p0;
wire   [0:0] grp_fu_228_p2;
reg   [1:0] grp_fu_215_opcode;
reg    grp_fu_215_ce;
reg    grp_fu_219_ce;
reg    grp_fu_224_ce;
wire    grp_fu_228_ce;
wire   [4:0] grp_fu_228_opcode;
reg    grp_fu_234_ce;
reg    grp_fu_237_ce;
reg   [5:0] ap_NS_fsm;
wire   [31:0] sum_of_squares_split_addr_8_reg_3560;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st0_fsm_0 = 6'b000000;
parameter    ap_ST_st1_fsm_1 = 6'b000001;
parameter    ap_ST_st2_fsm_2 = 6'b000010;
parameter    ap_ST_st3_fsm_3 = 6'b000011;
parameter    ap_ST_st4_fsm_4 = 6'b000100;
parameter    ap_ST_pp0_stg0_fsm_5 = 6'b000101;
parameter    ap_ST_st28_fsm_6 = 6'b000110;
parameter    ap_ST_st29_fsm_7 = 6'b000111;
parameter    ap_ST_st30_fsm_8 = 6'b001000;
parameter    ap_ST_st31_fsm_9 = 6'b001001;
parameter    ap_ST_st32_fsm_10 = 6'b001010;
parameter    ap_ST_st33_fsm_11 = 6'b001011;
parameter    ap_ST_st34_fsm_12 = 6'b001100;
parameter    ap_ST_st35_fsm_13 = 6'b001101;
parameter    ap_ST_st36_fsm_14 = 6'b001110;
parameter    ap_ST_st37_fsm_15 = 6'b001111;
parameter    ap_ST_st38_fsm_16 = 6'b010000;
parameter    ap_ST_st39_fsm_17 = 6'b010001;
parameter    ap_ST_st40_fsm_18 = 6'b010010;
parameter    ap_ST_st41_fsm_19 = 6'b010011;
parameter    ap_ST_st42_fsm_20 = 6'b010100;
parameter    ap_ST_st43_fsm_21 = 6'b010101;
parameter    ap_ST_st44_fsm_22 = 6'b010110;
parameter    ap_ST_st45_fsm_23 = 6'b010111;
parameter    ap_ST_st46_fsm_24 = 6'b011000;
parameter    ap_ST_st47_fsm_25 = 6'b011001;
parameter    ap_ST_st48_fsm_26 = 6'b011010;
parameter    ap_ST_st49_fsm_27 = 6'b011011;
parameter    ap_ST_st50_fsm_28 = 6'b011100;
parameter    ap_ST_st51_fsm_29 = 6'b011101;
parameter    ap_ST_st52_fsm_30 = 6'b011110;
parameter    ap_ST_st53_fsm_31 = 6'b011111;
parameter    ap_ST_st54_fsm_32 = 6'b100000;
parameter    ap_ST_st55_fsm_33 = 6'b100001;
parameter    ap_ST_st56_fsm_34 = 6'b100010;
parameter    ap_ST_st57_fsm_35 = 6'b100011;
parameter    ap_ST_st58_fsm_36 = 6'b100100;
parameter    ap_ST_st59_fsm_37 = 6'b100101;
parameter    ap_ST_st60_fsm_38 = 6'b100110;
parameter    ap_ST_st61_fsm_39 = 6'b100111;
parameter    ap_ST_st62_fsm_40 = 6'b101000;
parameter    ap_ST_st63_fsm_41 = 6'b101001;
parameter    ap_ST_st64_fsm_42 = 6'b101010;
parameter    ap_ST_st65_fsm_43 = 6'b101011;
parameter    ap_ST_st66_fsm_44 = 6'b101100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b00000000000000000000000000000001;
parameter    ap_const_lv32_2 = 32'b00000000000000000000000000000010;
parameter    ap_const_lv32_3 = 32'b00000000000000000000000000000011;
parameter    ap_const_lv32_4 = 32'b00000000000000000000000000000100;
parameter    ap_const_lv32_5 = 32'b00000000000000000000000000000101;
parameter    ap_const_lv32_6 = 32'b00000000000000000000000000000110;
parameter    ap_const_lv32_7 = 32'b00000000000000000000000000000111;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_8000000000000000 = 64'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv8_C8 = 8'b11001000;
parameter    ap_const_lv8_1 = 8'b00000001;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b01;
parameter    ap_const_lv5_1 = 5'b00001;
parameter    ap_true = 1'b1;


distance_squared_sum_of_squares_split #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
sum_of_squares_split_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( sum_of_squares_split_address0 ),
    .ce0( sum_of_squares_split_ce0 ),
    .we0( sum_of_squares_split_we0 ),
    .d0( sum_of_squares_split_d0 ),
    .q0( sum_of_squares_split_q0 ),
    .address1( sum_of_squares_split_address1 ),
    .ce1( sum_of_squares_split_ce1 ),
    .we1( sum_of_squares_split_we1 ),
    .d1( sum_of_squares_split_d1 )
);

distance_squared_grp_fu_215_ACMP_dadddsub_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
distance_squared_grp_fu_215_ACMP_dadddsub_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_215_p0 ),
    .din1( grp_fu_215_p1 ),
    .opcode( grp_fu_215_opcode ),
    .ce( grp_fu_215_ce ),
    .dout( grp_fu_215_p2 )
);

distance_squared_grp_fu_219_ACMP_dadd_2 #(
    .ID( 2 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
distance_squared_grp_fu_219_ACMP_dadd_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_219_p0 ),
    .din1( grp_fu_219_p1 ),
    .ce( grp_fu_219_ce ),
    .dout( grp_fu_219_p2 )
);

distance_squared_grp_fu_224_ACMP_dmul_3 #(
    .ID( 3 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
distance_squared_grp_fu_224_ACMP_dmul_3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_224_p0 ),
    .din1( grp_fu_224_p1 ),
    .ce( grp_fu_224_ce ),
    .dout( grp_fu_224_p2 )
);

distance_squared_grp_fu_228_ACMP_dcmp_4 #(
    .ID( 4 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
distance_squared_grp_fu_228_ACMP_dcmp_4_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_228_p0 ),
    .din1( grp_fu_228_p1 ),
    .ce( grp_fu_228_ce ),
    .opcode( grp_fu_228_opcode ),
    .dout( grp_fu_228_p2 )
);

distance_squared_grp_fu_234_ACMP_sitodp_5 #(
    .ID( 5 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
distance_squared_grp_fu_234_ACMP_sitodp_5_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_234_p0 ),
    .ce( grp_fu_234_ce ),
    .dout( grp_fu_234_p1 )
);

distance_squared_grp_fu_237_ACMP_sitodp_6 #(
    .ID( 6 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
distance_squared_grp_fu_237_ACMP_sitodp_6_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_237_p0 ),
    .ce( grp_fu_237_ce ),
    .dout( grp_fu_237_p1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_254_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond1_fu_254_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_ST_st4_fsm_4 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_254_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
            ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it1 <= dim_cast3_reg_331;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it10 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it9;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it11 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it10;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it12 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it11;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it13 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it12;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it14 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it13;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it2 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it1;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it3 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it2;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it4 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it3;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it5 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it4;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it6 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it5;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it7 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it6;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it8 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it7;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_dim_cast3_reg_331_pp0_it9 <= ap_reg_ppstg_dim_cast3_reg_331_pp0_it8;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it1 <= exitcond1_reg_322;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it10 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it9;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it11 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it10;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it12 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it11;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it13 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it12;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it14 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it13;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it15 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it14;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it16 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it15;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it17 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it16;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it18 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it17;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it19 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it18;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it1;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it20 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it19;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it21 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it20;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it3 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it2;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it4 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it3;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it5 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it4;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it6 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it5;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it7 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it6;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it8 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it7;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond1_reg_322_pp0_it9 <= ap_reg_ppstg_exitcond1_reg_322_pp0_it8;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it16 <= sum_of_squares_split_addr_8_reg_356;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it17 <= ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it16;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it18 <= ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it17;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it19 <= ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it18;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it20 <= ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it19;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it21 <= ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it20;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it16) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it15))) begin
        diff_squared_reg_362 <= grp_fu_224_p2;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond1_fu_254_p2))) begin
        dim_cast3_reg_331 <= dim_reg_203[2:0];
    end
    if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
        dim_reg_203 <= ap_const_lv8_0;
    end else if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond1_fu_254_p2))) begin
        dim_reg_203 <= (dim_reg_203 + ap_const_lv8_1);
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        exitcond1_reg_322 <= (dim_reg_203 == ap_const_lv8_C8? 1'b1: 1'b0);
    end
    if ((((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it10)) | (ap_ST_st36_fsm_14 == ap_CS_fsm) | (ap_ST_st41_fsm_19 == ap_CS_fsm) | (ap_ST_st46_fsm_24 == ap_CS_fsm) | (ap_ST_st51_fsm_29 == ap_CS_fsm) | (ap_ST_st56_fsm_34 == ap_CS_fsm) | (ap_ST_st61_fsm_39 == ap_CS_fsm))) begin
        reg_240 <= grp_fu_215_p2;
    end
    if (((ap_ST_st36_fsm_14 == ap_CS_fsm) | (ap_ST_st41_fsm_19 == ap_CS_fsm) | (ap_ST_st46_fsm_24 == ap_CS_fsm) | (ap_ST_st51_fsm_29 == ap_CS_fsm) | (ap_ST_st56_fsm_34 == ap_CS_fsm) | (ap_ST_st61_fsm_39 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it16) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it15)) | (ap_ST_st29_fsm_7 == ap_CS_fsm) | (ap_ST_st31_fsm_9 == ap_CS_fsm))) begin
        reg_247 <= sum_of_squares_split_q0;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it15) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it14))) begin
        sum_of_squares_split_addr_8_reg_356 <= sum_of_squares_split_addr_8_reg_3560;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it21) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it20))) begin
        tmp_1_reg_367 <= grp_fu_219_p2;
    end
    if ((ap_ST_st31_fsm_9 == ap_CS_fsm)) begin
        if (grp_fu_228_p2) begin
            tmp_s_reg_372 <= ap_const_lv64_0;
        end else begin
            tmp_s_reg_372 <= reg_247;
        end

    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (exitcond1_reg_322 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        vector1_data_V_read_reg_336 <= vector1_data_V_dout;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it5))) begin
        vector1_data_reg_346 <= grp_fu_234_p1;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (exitcond1_reg_322 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        vector2_data_V_read_reg_341 <= vector2_data_V_dout;
    end
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it5))) begin
        vector2_data_reg_351 <= grp_fu_237_p1;
    end
end

/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it21 or ap_reg_ppiten_pp0_it22 or exitcond1_fu_254_p2)
begin
    if ((((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it22) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it21)) | ((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_254_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_NS_fsm = ap_ST_st28_fsm_6;
    end else if (((ap_ST_st66_fsm_44 == ap_CS_fsm) & ~(ap_const_logic_1 == ap_start))) begin
        ap_NS_fsm = ap_ST_st0_fsm_0;
    end else if ((ap_ST_st65_fsm_43 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st66_fsm_44;
    end else if ((ap_ST_st64_fsm_42 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st65_fsm_43;
    end else if ((ap_ST_st63_fsm_41 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st64_fsm_42;
    end else if ((ap_ST_st62_fsm_40 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st63_fsm_41;
    end else if ((ap_ST_st61_fsm_39 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st62_fsm_40;
    end else if ((ap_ST_st60_fsm_38 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st61_fsm_39;
    end else if ((ap_ST_st59_fsm_37 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st60_fsm_38;
    end else if ((ap_ST_st58_fsm_36 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st59_fsm_37;
    end else if ((ap_ST_st57_fsm_35 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st58_fsm_36;
    end else if ((ap_ST_st56_fsm_34 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st57_fsm_35;
    end else if ((ap_ST_st55_fsm_33 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st56_fsm_34;
    end else if ((ap_ST_st54_fsm_32 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st55_fsm_33;
    end else if ((ap_ST_st53_fsm_31 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st54_fsm_32;
    end else if ((ap_ST_st52_fsm_30 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st53_fsm_31;
    end else if ((ap_ST_st51_fsm_29 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st52_fsm_30;
    end else if ((ap_ST_st50_fsm_28 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st51_fsm_29;
    end else if ((ap_ST_st49_fsm_27 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st50_fsm_28;
    end else if ((ap_ST_st48_fsm_26 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st49_fsm_27;
    end else if ((ap_ST_st47_fsm_25 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st48_fsm_26;
    end else if ((ap_ST_st46_fsm_24 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st47_fsm_25;
    end else if ((ap_ST_st45_fsm_23 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st46_fsm_24;
    end else if ((ap_ST_st44_fsm_22 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st45_fsm_23;
    end else if ((ap_ST_st43_fsm_21 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st44_fsm_22;
    end else if ((ap_ST_st42_fsm_20 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st43_fsm_21;
    end else if ((ap_ST_st41_fsm_19 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st42_fsm_20;
    end else if ((ap_ST_st40_fsm_18 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st41_fsm_19;
    end else if ((ap_ST_st39_fsm_17 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st40_fsm_18;
    end else if ((ap_ST_st38_fsm_16 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st39_fsm_17;
    end else if ((ap_ST_st37_fsm_15 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st38_fsm_16;
    end else if ((ap_ST_st36_fsm_14 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st37_fsm_15;
    end else if ((ap_ST_st35_fsm_13 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st36_fsm_14;
    end else if ((ap_ST_st34_fsm_12 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st35_fsm_13;
    end else if ((ap_ST_st33_fsm_11 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st34_fsm_12;
    end else if ((ap_ST_st32_fsm_10 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st33_fsm_11;
    end else if ((ap_ST_st31_fsm_9 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st32_fsm_10;
    end else if ((ap_ST_st30_fsm_8 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st31_fsm_9;
    end else if ((ap_ST_st29_fsm_7 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st30_fsm_8;
    end else if ((ap_ST_st28_fsm_6 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st29_fsm_7;
    end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
    end else if ((ap_ST_st3_fsm_3 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st4_fsm_4;
    end else if ((ap_ST_st2_fsm_2 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st3_fsm_3;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        ap_NS_fsm = ap_ST_st2_fsm_2;
    end else if ((((ap_ST_st0_fsm_0 == ap_CS_fsm) & (ap_const_logic_1 == ap_start)) | ((ap_ST_st66_fsm_44 == ap_CS_fsm) & (ap_const_logic_1 == ap_start)))) begin
        ap_NS_fsm = ap_ST_st1_fsm_1;
    end else begin
        ap_NS_fsm = ap_CS_fsm;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st66_fsm_44 == ap_CS_fsm)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st0_fsm_0 == ap_CS_fsm)) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// grp_fu_215_ce assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_322_pp0_it10 or ap_reg_ppstg_exitcond1_reg_322_pp0_it6 or ap_reg_ppstg_exitcond1_reg_322_pp0_it7 or ap_reg_ppstg_exitcond1_reg_322_pp0_it8 or ap_reg_ppstg_exitcond1_reg_322_pp0_it9)
begin
    if (((ap_ST_st0_fsm_0 == ap_CS_fsm) | (ap_ST_st29_fsm_7 == ap_CS_fsm) | (ap_ST_st31_fsm_9 == ap_CS_fsm) | (ap_ST_st1_fsm_1 == ap_CS_fsm) | (ap_ST_st2_fsm_2 == ap_CS_fsm) | (ap_ST_st3_fsm_3 == ap_CS_fsm) | (ap_ST_st4_fsm_4 == ap_CS_fsm) | (ap_ST_st28_fsm_6 == ap_CS_fsm) | (ap_ST_st30_fsm_8 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ((ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | (~(ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it6) & ~(ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it7) & ~(ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it8) & ~(ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it9) & ~(ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it10)))))) begin
        grp_fu_215_ce = ap_const_logic_0;
    end else begin
        grp_fu_215_ce = ap_const_logic_1;
    end
end

/// grp_fu_215_opcode assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it7 or ap_reg_ppstg_exitcond1_reg_322_pp0_it6)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it6))) begin
        grp_fu_215_opcode = ap_const_lv2_1;
    end else if (((ap_ST_st32_fsm_10 == ap_CS_fsm) | (ap_ST_st37_fsm_15 == ap_CS_fsm) | (ap_ST_st42_fsm_20 == ap_CS_fsm) | (ap_ST_st47_fsm_25 == ap_CS_fsm) | (ap_ST_st52_fsm_30 == ap_CS_fsm) | (ap_ST_st57_fsm_35 == ap_CS_fsm) | (ap_ST_st62_fsm_40 == ap_CS_fsm))) begin
        grp_fu_215_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_215_opcode = ap_const_lv2_1;
    end
end

/// grp_fu_215_p0 assign process. ///
always @ (ap_CS_fsm or reg_240 or ap_reg_ppiten_pp0_it7 or ap_reg_ppstg_exitcond1_reg_322_pp0_it6 or vector1_data_reg_346 or tmp_s_reg_372)
begin
    if (((ap_ST_st37_fsm_15 == ap_CS_fsm) | (ap_ST_st42_fsm_20 == ap_CS_fsm) | (ap_ST_st47_fsm_25 == ap_CS_fsm) | (ap_ST_st52_fsm_30 == ap_CS_fsm) | (ap_ST_st57_fsm_35 == ap_CS_fsm) | (ap_ST_st62_fsm_40 == ap_CS_fsm))) begin
        grp_fu_215_p0 = reg_240;
    end else if ((ap_ST_st32_fsm_10 == ap_CS_fsm)) begin
        grp_fu_215_p0 = tmp_s_reg_372;
    end else if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it6))) begin
        grp_fu_215_p0 = vector1_data_reg_346;
    end else begin
        grp_fu_215_p0 = tmp_s_reg_372;
    end
end

/// grp_fu_215_p1 assign process. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it7 or reg_247 or ap_reg_ppstg_exitcond1_reg_322_pp0_it6 or vector2_data_reg_351)
begin
    if (((ap_ST_st32_fsm_10 == ap_CS_fsm) | (ap_ST_st37_fsm_15 == ap_CS_fsm) | (ap_ST_st42_fsm_20 == ap_CS_fsm) | (ap_ST_st47_fsm_25 == ap_CS_fsm) | (ap_ST_st52_fsm_30 == ap_CS_fsm) | (ap_ST_st57_fsm_35 == ap_CS_fsm) | (ap_ST_st62_fsm_40 == ap_CS_fsm))) begin
        grp_fu_215_p1 = reg_247;
    end else if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it6))) begin
        grp_fu_215_p1 = vector2_data_reg_351;
    end else begin
        grp_fu_215_p1 = vector2_data_reg_351;
    end
end

/// grp_fu_219_ce assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_322_pp0_it16 or ap_reg_ppstg_exitcond1_reg_322_pp0_it17 or ap_reg_ppstg_exitcond1_reg_322_pp0_it18 or ap_reg_ppstg_exitcond1_reg_322_pp0_it19 or ap_reg_ppstg_exitcond1_reg_322_pp0_it20)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it20) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it16) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it17) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it18) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it19)))) begin
        grp_fu_219_ce = ap_const_logic_1;
    end else begin
        grp_fu_219_ce = ap_const_logic_0;
    end
end

/// grp_fu_224_ce assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_322_pp0_it15 or ap_reg_ppstg_exitcond1_reg_322_pp0_it11 or ap_reg_ppstg_exitcond1_reg_322_pp0_it12 or ap_reg_ppstg_exitcond1_reg_322_pp0_it13 or ap_reg_ppstg_exitcond1_reg_322_pp0_it14)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it15) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it14) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it11) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it12) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it13)))) begin
        grp_fu_224_ce = ap_const_logic_1;
    end else begin
        grp_fu_224_ce = ap_const_logic_0;
    end
end

/// grp_fu_234_ce assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_322_pp0_it1 or ap_reg_ppstg_exitcond1_reg_322_pp0_it2 or ap_reg_ppstg_exitcond1_reg_322_pp0_it3 or ap_reg_ppstg_exitcond1_reg_322_pp0_it4 or ap_reg_ppstg_exitcond1_reg_322_pp0_it5)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it5) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it1) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it2) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it3) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it4)))) begin
        grp_fu_234_ce = ap_const_logic_1;
    end else begin
        grp_fu_234_ce = ap_const_logic_0;
    end
end

/// grp_fu_237_ce assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppstg_exitcond1_reg_322_pp0_it1 or ap_reg_ppstg_exitcond1_reg_322_pp0_it2 or ap_reg_ppstg_exitcond1_reg_322_pp0_it3 or ap_reg_ppstg_exitcond1_reg_322_pp0_it4 or ap_reg_ppstg_exitcond1_reg_322_pp0_it5)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it5) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it1) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it2) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it3) | (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it4)))) begin
        grp_fu_237_ce = ap_const_logic_1;
    end else begin
        grp_fu_237_ce = ap_const_logic_0;
    end
end

/// sum_of_squares_split_address0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it15 or sum_of_squares_split_addr_reg_282 or sum_of_squares_split_addr_1_reg_287 or sum_of_squares_split_addr_2_reg_292 or sum_of_squares_split_addr_3_reg_297 or sum_of_squares_split_addr_4_reg_302 or sum_of_squares_split_addr_5_reg_307 or sum_of_squares_split_addr_6_reg_312 or sum_of_squares_split_addr_7_reg_317 or ap_reg_ppstg_exitcond1_reg_322_pp0_it14 or tmp_cast_fu_270_p1)
begin
    if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = ap_const_lv32_6;
    end else if ((ap_ST_st3_fsm_3 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = ap_const_lv32_4;
    end else if ((ap_ST_st2_fsm_2 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = ap_const_lv32_2;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = ap_const_lv32_0;
    end else if ((ap_ST_st60_fsm_38 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = sum_of_squares_split_addr_7_reg_317;
    end else if ((ap_ST_st55_fsm_33 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = sum_of_squares_split_addr_6_reg_312;
    end else if ((ap_ST_st50_fsm_28 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = sum_of_squares_split_addr_5_reg_307;
    end else if ((ap_ST_st45_fsm_23 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = sum_of_squares_split_addr_4_reg_302;
    end else if ((ap_ST_st40_fsm_18 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = sum_of_squares_split_addr_3_reg_297;
    end else if ((ap_ST_st35_fsm_13 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = sum_of_squares_split_addr_2_reg_292;
    end else if ((ap_ST_st30_fsm_8 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = sum_of_squares_split_addr_1_reg_287;
    end else if ((ap_ST_st28_fsm_6 == ap_CS_fsm)) begin
        sum_of_squares_split_address0 = sum_of_squares_split_addr_reg_282;
    end else if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it15) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it14))) begin
        sum_of_squares_split_address0 = tmp_cast_fu_270_p1;
    end else begin
        sum_of_squares_split_address0 = tmp_cast_fu_270_p1;
    end
end

/// sum_of_squares_split_address1 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it22 or ap_reg_ppstg_exitcond1_reg_322_pp0_it21 or ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it21)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it22) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it21))) begin
        sum_of_squares_split_address1 = ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it21;
    end else if ((ap_ST_st4_fsm_4 == ap_CS_fsm)) begin
        sum_of_squares_split_address1 = ap_const_lv32_7;
    end else if ((ap_ST_st3_fsm_3 == ap_CS_fsm)) begin
        sum_of_squares_split_address1 = ap_const_lv32_5;
    end else if ((ap_ST_st2_fsm_2 == ap_CS_fsm)) begin
        sum_of_squares_split_address1 = ap_const_lv32_3;
    end else if ((ap_ST_st1_fsm_1 == ap_CS_fsm)) begin
        sum_of_squares_split_address1 = ap_const_lv32_1;
    end else begin
        sum_of_squares_split_address1 = ap_reg_ppstg_sum_of_squares_split_addr_8_reg_356_pp0_it21;
    end
end

/// sum_of_squares_split_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it15 or ap_reg_ppstg_exitcond1_reg_322_pp0_it14)
begin
    if (((ap_ST_st1_fsm_1 == ap_CS_fsm) | (ap_ST_st2_fsm_2 == ap_CS_fsm) | (ap_ST_st3_fsm_3 == ap_CS_fsm) | (ap_ST_st4_fsm_4 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it15) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it14)) | (ap_ST_st28_fsm_6 == ap_CS_fsm) | (ap_ST_st30_fsm_8 == ap_CS_fsm) | (ap_ST_st35_fsm_13 == ap_CS_fsm) | (ap_ST_st40_fsm_18 == ap_CS_fsm) | (ap_ST_st45_fsm_23 == ap_CS_fsm) | (ap_ST_st50_fsm_28 == ap_CS_fsm) | (ap_ST_st55_fsm_33 == ap_CS_fsm) | (ap_ST_st60_fsm_38 == ap_CS_fsm))) begin
        sum_of_squares_split_ce0 = ap_const_logic_1;
    end else begin
        sum_of_squares_split_ce0 = ap_const_logic_0;
    end
end

/// sum_of_squares_split_ce1 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it22 or ap_reg_ppstg_exitcond1_reg_322_pp0_it21)
begin
    if (((ap_ST_st1_fsm_1 == ap_CS_fsm) | (ap_ST_st2_fsm_2 == ap_CS_fsm) | (ap_ST_st3_fsm_3 == ap_CS_fsm) | (ap_ST_st4_fsm_4 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it22) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it21)))) begin
        sum_of_squares_split_ce1 = ap_const_logic_1;
    end else begin
        sum_of_squares_split_ce1 = ap_const_logic_0;
    end
end

/// sum_of_squares_split_d1 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it22 or ap_reg_ppstg_exitcond1_reg_322_pp0_it21 or tmp_1_reg_367)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it22) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it21))) begin
        sum_of_squares_split_d1 = tmp_1_reg_367;
    end else if (((ap_ST_st1_fsm_1 == ap_CS_fsm) | (ap_ST_st2_fsm_2 == ap_CS_fsm) | (ap_ST_st3_fsm_3 == ap_CS_fsm) | (ap_ST_st4_fsm_4 == ap_CS_fsm))) begin
        sum_of_squares_split_d1 = ap_const_lv64_0;
    end else begin
        sum_of_squares_split_d1 = ap_const_lv64_0;
    end
end

/// sum_of_squares_split_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st1_fsm_1 == ap_CS_fsm) | (ap_ST_st2_fsm_2 == ap_CS_fsm) | (ap_ST_st3_fsm_3 == ap_CS_fsm) | (ap_ST_st4_fsm_4 == ap_CS_fsm))) begin
        sum_of_squares_split_we0 = ap_const_logic_1;
    end else begin
        sum_of_squares_split_we0 = ap_const_logic_0;
    end
end

/// sum_of_squares_split_we1 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it22 or ap_reg_ppstg_exitcond1_reg_322_pp0_it21)
begin
    if (((ap_ST_st1_fsm_1 == ap_CS_fsm) | (ap_ST_st2_fsm_2 == ap_CS_fsm) | (ap_ST_st3_fsm_3 == ap_CS_fsm) | (ap_ST_st4_fsm_4 == ap_CS_fsm) | ((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it22) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_322_pp0_it21)))) begin
        sum_of_squares_split_we1 = ap_const_logic_1;
    end else begin
        sum_of_squares_split_we1 = ap_const_logic_0;
    end
end

/// vector1_data_V_read assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_322 or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (exitcond1_reg_322 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        vector1_data_V_read = ap_const_logic_1;
    end else begin
        vector1_data_V_read = ap_const_logic_0;
    end
end

/// vector2_data_V_read assign process. ///
always @ (ap_CS_fsm or exitcond1_reg_322 or ap_sig_bdd_100 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_ST_pp0_stg0_fsm_5 == ap_CS_fsm) & (exitcond1_reg_322 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_100 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        vector2_data_V_read = ap_const_logic_1;
    end else begin
        vector2_data_V_read = ap_const_logic_0;
    end
end

/// ap_sig_bdd_100 assign process. ///
always @ (vector1_data_V_empty_n or vector2_data_V_empty_n or exitcond1_reg_322)
begin
    ap_sig_bdd_100 = (((vector1_data_V_empty_n == ap_const_logic_0) & (exitcond1_reg_322 == ap_const_lv1_0)) | ((exitcond1_reg_322 == ap_const_lv1_0) & (vector2_data_V_empty_n == ap_const_logic_0)));
end
assign exitcond1_fu_254_p2 = (dim_reg_203 == ap_const_lv8_C8? 1'b1: 1'b0);
assign grp_fu_219_p0 = reg_247;
assign grp_fu_219_p1 = diff_squared_reg_362;
assign grp_fu_224_p0 = reg_240;
assign grp_fu_224_p1 = reg_240;
assign grp_fu_228_ce = ap_const_logic_1;
assign grp_fu_228_opcode = ap_const_lv5_1;
assign grp_fu_228_p0 = sum_of_squares_split_q0;
assign grp_fu_228_p1 = ap_const_lv64_8000000000000000;
assign grp_fu_234_p0 = vector1_data_V_read_reg_336;
assign grp_fu_237_p0 = vector2_data_V_read_reg_341;
assign sum = grp_fu_215_p2;
assign sum_of_squares_split_addr_1_gep_fu_135_p3 = ap_const_lv32_1;
assign sum_of_squares_split_addr_2_gep_fu_148_p3 = ap_const_lv32_2;
assign sum_of_squares_split_addr_3_gep_fu_156_p3 = ap_const_lv32_3;
assign sum_of_squares_split_addr_4_gep_fu_164_p3 = ap_const_lv32_4;
assign sum_of_squares_split_addr_5_gep_fu_172_p3 = ap_const_lv32_5;
assign sum_of_squares_split_addr_6_gep_fu_180_p3 = ap_const_lv32_6;
assign sum_of_squares_split_addr_7_gep_fu_188_p3 = ap_const_lv32_7;
assign sum_of_squares_split_addr_8_reg_3560 = $unsigned(ap_reg_ppstg_dim_cast3_reg_331_pp0_it14);
assign sum_of_squares_split_addr_gep_fu_121_p3 = ap_const_lv32_0;
assign sum_of_squares_split_d0 = ap_const_lv64_0;
assign tmp_cast_fu_270_p1 = $unsigned(ap_reg_ppstg_dim_cast3_reg_331_pp0_it14);
assign vector1_keep_V_read = ap_const_logic_0;
assign vector1_last_V_read = ap_const_logic_0;
assign vector2_keep_V_read = ap_const_logic_0;
assign vector2_last_V_read = ap_const_logic_0;
always @ (posedge ap_clk)
begin
    sum_of_squares_split_addr_reg_282[2:0] <= 3'b000;
    sum_of_squares_split_addr_1_reg_287[2:0] <= 3'b001;
    sum_of_squares_split_addr_2_reg_292[2:0] <= 3'b010;
    sum_of_squares_split_addr_3_reg_297[2:0] <= 3'b011;
    sum_of_squares_split_addr_4_reg_302[2:0] <= 3'b100;
    sum_of_squares_split_addr_5_reg_307[2:0] <= 3'b101;
    sum_of_squares_split_addr_6_reg_312[2:0] <= 3'b110;
    sum_of_squares_split_addr_7_reg_317[2:0] <= 3'b111;
end



endmodule //distance_squared

